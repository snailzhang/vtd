<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.esd.db.dao.packMapper">
	<resultMap id="BaseResultMap" type="com.esd.db.model.pack">
		<id column="pack_id" property="packId" jdbcType="INTEGER" />
		<result column="employer_id" property="employerId" jdbcType="INTEGER" />
		<result column="note_id" property="noteId" jdbcType="VARCHAR" />
		<result column="taskMarkTimeId" property="taskMarkTimeId" jdbcType="INTEGER" />
		<result column="taskMarkTimeName" property="taskMarkTimeName" jdbcType="VARCHAR" />
		<result column="pack_name" property="packName" jdbcType="VARCHAR" />
		<result column="pack_status" property="packStatus" jdbcType="INTEGER" />
		<result column="pack_lock_time" property="packLockTime" jdbcType="INTEGER" />
		<result column="unzip" property="unzip" jdbcType="INTEGER" />
		<result column="pack_lvl" property="packLvl" jdbcType="INTEGER" />
		<result column="create_id" property="createId" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="create_method" property="createMethod" jdbcType="VARCHAR" />
		<result column="update_id" property="updateId" jdbcType="INTEGER" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="update_method" property="updateMethod" jdbcType="VARCHAR" />
		<result column="down_count" property="downCount" jdbcType="INTEGER" />
		<result column="version" property="version" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="com.esd.db.model.packWithBLOBs" extends="BaseResultMap">
		<result column="pack_file" property="packFile" jdbcType="LONGVARBINARY" />
		<result column="pack_format" property="packFormat" jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		pack_id, employer_id,note_id,taskMarkTimeId,taskMarkTimeName, pack_name, pack_status, pack_lock_time,unzip,pack_lvl, create_id, create_time,
		create_method, update_id, update_time, update_method,down_count, version
	</sql>
	<sql id="Blob_Column_List">
		pack_file, pack_format
	</sql>
	<select id="selectTaskMarkTimeId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
		select taskMarkTimeId from pack 
		where pack_id = #{packId}
	</select>
	<select id="selectTaskMarkTimeName" resultType="java.lang.String" parameterType="java.lang.Integer">
		select taskMarkTimeName from pack 
		where pack_id = #{packId}
	</select>
	<select id="selectLikePackName" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from pack
		<where>
			employer_id = #{employerId}
			<if test="packStuts == 1">
				and pack_status = #{packStuts}
			</if>
			<if test="packStuts == 0">
				<![CDATA[and (pack_status = 0 or pack_status = 2)]]>
			</if>
			<if test="unzip != 0">
				and unzip = #{unzip}
			</if>
			<if test="unzip == 0">
			    and (unzip = 1 or unzip = 3)
			</if>
			<if test="packNameCondition !=null">
				and pack_name like "%${packNameCondition}%"
			</if>
		</where>
		order by pack_lvl
		limit #{begin},#{end}
	</select>
	<select id="selectCountLikePackName" resultType="java.lang.Integer" parameterType="java.util.Map">
		select
		count(pack_id) totle
		from pack
		<where>
			employer_id = #{employerId}
			<if test="packStuts == 1">
				and pack_status = #{packStuts}
			</if>
			<if test="packStuts == 0">
				<![CDATA[and (pack_status = 0 or pack_status = 2)]]>
			</if>
			<if test="unzip != 0">
				and unzip = #{unzip}
			</if>
			<if test="unzip == 0">
			    and (unzip = 1 or unzip = 3)
			</if>
			<if test="packNameCondition !=null">
				and pack_name like "%${packNameCondition}%"
			</if>
		</where>
	</select>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from pack
		where pack_id = #{packId,jdbcType=INTEGER}
	</select>
	<select id="selectNewPackIdByEmployerId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
		select
		pack_id
		from pack
		where employer_id = #{employerId,jdbcType=INTEGER} ORDER BY pack_id DESC LIMIT 1
	</select>
	<select id="selAllByEmployerId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from pack
		where employer_id = #{employerId,jdbcType=INTEGER} ORDER BY pack_id DESC
	</select>
	<select id="selectPackByPackName" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from pack
		where pack_name = #{packName,jdbcType=VARCHAR}
	</select>
	<select id="selectCountPackDoing" resultType="java.lang.Integer">
		select
		Count(pack_id) total
		from pack
		where pack_status = 0
	</select>
	<select id="selectPackIdOrderByPackLvl" resultType="java.lang.Integer">
		select
		pack_id
		from pack
		where pack_status = 0 and unzip = 1
		order by pack_lvl
		limit 0,1
	</select>
	<select id="selectPackCOuntByEmployerId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
		select
		Count(pack_id) total
		from pack
		where employer_id = #{employerId,jdbcType=INTEGER}
	</select>
	<select id="selectDoingPackCountByEmployerId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
		select
		Count(pack_id) total
		from pack
		where employer_id = #{employerId,jdbcType=INTEGER} and pack_status
		= 0
	</select>
	<select id="selectFinishPackCountByEmployerId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
		select
		Count(pack_id) total
		from pack
		where employer_id = #{employerId,jdbcType=INTEGER} and
		pack_status = 1
	</select>
	<select id="selectPackLockTime" resultType="java.lang.Integer" parameterType="java.lang.Integer">
		select
		pack_lock_time
		from pack
		WHERE pack_id = #{packId,jdbcType=INTEGER}
	</select>
	<select id="selectNoteIdByPackId" resultType="java.lang.String" parameterType="java.lang.Integer">
		select
		note_id
		from pack
		WHERE pack_id = #{packId,jdbcType=INTEGER}
	</select>
	<select id="selectPackNameByPackId" resultType="java.lang.String" parameterType="java.lang.Integer">
		select
		pack_name
		from pack
		WHERE pack_id = #{packId,jdbcType=INTEGER}
	</select>
	<select id="selectCountPackByPackName" resultType="java.lang.Integer" parameterType="java.lang.String">
		select
		count(pack_id) count
		from pack
		WHERE pack_name = #{packName,jdbcType=VARCHAR}
	</select>
	<select id="selectDownCountByPackId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
		select
		down_count
		from pack
		WHERE pack_id = #{packId,jdbcType=INTEGER}
	</select>
	<select id="selectAllPackPagesByEmployerId" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from pack
		where employer_id = #{employerId} ORDER BY pack_id DESC limit #{begin},#{end}
	</select>
	<select id="selectDoingPackPagesByEmployerId" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from pack
		where employer_id = #{employerId} and pack_status = false ORDER BY pack_id DESC limit #{begin},#{end}
	</select>
	<select id="selectPackIdByPackName" resultType="java.lang.Integer" parameterType="java.lang.String">
		select
		pack_id
		from pack
		where pack_name = #{packName,jdbcType=VARCHAR}
	</select>
	<select id="selectFinishPackPagesByEmployerId" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from pack
		where employer_id = #{employerId} and pack_status = true ORDER BY pack_id DESC limit #{begin},#{end}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from pack
		where pack_id = #{packId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByName" parameterType="java.lang.String">
		delete from pack
		where pack_name = #{packName,jdbcType=String}
	</delete>
	<insert id="insert" parameterType="com.esd.db.model.packWithBLOBs">
		insert into pack (pack_id, employer_id,note_id, pack_name,
		pack_status, pack_lock_time,unzip,pack_lvl create_id,
		create_time, create_method, update_id,
		update_time,
		update_method,down_count, version,
		pack_file,
		pack_format)
		values (#{packId,jdbcType=INTEGER}, #{employerId,jdbcType=INTEGER}, #{noteId,jdbcType=VARCHAR},#{packName,jdbcType=VARCHAR},
		#{packStatus,jdbcType=INTEGER},
		#{packLockTime,jdbcType=INTEGER},#{unzip,jdbcType=INTEGER},#{packLvl,jdbcType=INTEGER},
		#{createId,jdbcType=INTEGER},
		#{createTime,jdbcType=TIMESTAMP},
		#{createMethod,jdbcType=VARCHAR},
		#{updateId,jdbcType=INTEGER},
		#{updateTime,jdbcType=TIMESTAMP}, #{updateMethod,jdbcType=VARCHAR},
		#{downCount,jdbcType=INTEGER}, #{version,jdbcType=INTEGER},
		#{packFile,jdbcType=LONGVARBINARY},
		#{packFormat,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.esd.db.model.packWithBLOBs">
		insert into pack
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="packId != null">
				pack_id,
			</if>
			<if test="employerId != null">
				employer_id,
			</if>
			<if test="noteId != null">
				note_id,
			</if>
			<if test="taskMarkTimeId != null">
				taskMarkTimeId,
			</if>
			<if test="taskMarkTimeName != null">
				taskMarkTimeName,
			</if>
			<if test="packName != null">
				pack_name,
			</if>
			<if test="packStatus != null">
				pack_status,
			</if>
			<if test="packLockTime != null">
				pack_lock_time,
			</if>
			<if test="unzip != null">
				unzip,
			</if>
			<if test="packLvl != null">
				pack_lvl,
			</if>
			<if test="createId != null">
				create_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="createMethod != null">
				create_method,
			</if>
			<if test="updateId != null">
				update_id,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="updateMethod != null">
				update_method,
			</if>
			<if test="downCount != null">
				down_count,
			</if>
			<if test="version != null">
				version,
			</if>
			<if test="packFile != null">
				pack_file,
			</if>
			<if test="packFormat != null">
				pack_format,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="packId != null">
				#{packId,jdbcType=INTEGER},
			</if>
			<if test="employerId != null">
				#{employerId,jdbcType=INTEGER},
			</if>
			<if test="noteId != null">
				#{noteId,jdbcType=VARCHAR},
			</if>
			<if test="taskMarkTimeId != null">
				#{taskMarkTimeId,jdbcType=INTEGER},
			</if>
			<if test="taskMarkTimeName != null">
				#{taskMarkTimeName,jdbcType=VARCHAR},
			</if>
			<if test="packName != null">
				#{packName,jdbcType=VARCHAR},
			</if>
			<if test="packStatus != null">
				#{packStatus,jdbcType=INTEGER},
			</if>
			<if test="packLockTime != null">
				#{packLockTime,jdbcType=INTEGER},
			</if>
			<if test="unzip != null">
				#{unzip,jdbcType=INTEGER},
			</if>
			<if test="packLvl != null">
				#{packLvl,jdbcType=INTEGER},
			</if>
			<if test="createId != null">
				#{createId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createMethod != null">
				#{createMethod,jdbcType=VARCHAR},
			</if>
			<if test="updateId != null">
				#{updateId,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateMethod != null">
				#{updateMethod,jdbcType=VARCHAR},
			</if>
			<if test="downCount != null">
				#{downCount,jdbcType=INTEGER},
			</if>
			<if test="version != null">
				#{version,jdbcType=INTEGER},
			</if>
			<if test="packFile != null">
				#{packFile,jdbcType=LONGVARBINARY},
			</if>
			<if test="packFormat != null">
				#{packFormat,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.esd.db.model.packWithBLOBs">
		update pack
		<set>
			<if test="employerId != null">
				employer_id = #{employerId,jdbcType=INTEGER},
			</if>
			<if test="noteId != null">
				note_id = #{noteId,jdbcType=VARCHAR},
			</if>
			<if test="taskMarkTimeId > 0">
				taskMarkTimeId = #{taskMarkTimeId,jdbcType=INTEGER},
			</if>
			<if test="packName != null">
				pack_name = #{packName,jdbcType=VARCHAR},
			</if>
			<if test="packStatus != null">
				pack_status = #{packStatus,jdbcType=INTEGER},
			</if>
			<if test="packLockTime != null">
				pack_lock_time = #{packLockTime,jdbcType=INTEGER},
			</if>
			<if test="unzip != null">
				unzip = #{unzip,jdbcType=INTEGER},
			</if>
			<if test="packLvl != null">
				pack_lvl = #{packLvl,jdbcType=INTEGER},
			</if>
			<if test="createId != null">
				create_id = #{createId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createMethod != null">
				create_method = #{createMethod,jdbcType=VARCHAR},
			</if>
			<if test="updateId != null">
				update_id = #{updateId,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateMethod != null">
				update_method = #{updateMethod,jdbcType=VARCHAR},
			</if>
			<if test="downCount != null">
				down_count = #{downCount,jdbcType=INTEGER},
			</if>
			<if test="version != null">
				version = #{version,jdbcType=INTEGER},
			</if>
			<if test="packFile != null">
				pack_file = #{packFile,jdbcType=LONGVARBINARY},
			</if>
			<if test="packFormat != null">
				pack_format = #{packFormat,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where pack_id = #{packId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.esd.db.model.packWithBLOBs">
		update pack
		set employer_id = #{employerId,jdbcType=INTEGER},
		note_id = #{noteId,jdbcType=VARCHAR},
		pack_name =
		#{packName,jdbcType=VARCHAR},
		pack_status =
		#{packStatus,jdbcType=INTEGER},
		pack_lock_time = #{packLockTime,jdbcType=INTEGER},
		unzip = #{unzip,jdbcType=INTEGER},
		pack_lvl = #{packLvl,jdbcType=INTEGER},
		create_id = #{createId,jdbcType=INTEGER},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		create_method = #{createMethod,jdbcType=VARCHAR},
		update_id = #{updateId,jdbcType=INTEGER},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP},
		update_method =
		#{updateMethod,jdbcType=VARCHAR},
		down_count = #{downCount,jdbcType=INTEGER},
		version = #{version,jdbcType=INTEGER},
		pack_file =
		#{packFile,jdbcType=LONGVARBINARY},
		pack_format =
		#{packFormat,jdbcType=LONGVARCHAR}
		where pack_id = #{packId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.esd.db.model.pack">
		update pack
		set employer_id = #{employerId,jdbcType=INTEGER},
		note_id = #{noteId,jdbcType=VARCHAR},
		pack_name = #{packName,jdbcType=VARCHAR},
		pack_status = #{packStatus,jdbcType=INTEGER},
		pack_lock_time = #{packLockTime,jdbcType=INTEGER},
		unzip= #{unzip,jdbcType=INTEGER},
		pack_lvl= #{packLvl,jdbcType=INTEGER},
		create_id =
		#{createId,jdbcType=INTEGER},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		create_method = #{createMethod,jdbcType=VARCHAR},
		update_id =
		#{updateId,jdbcType=INTEGER},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP},
		update_method =
		#{updateMethod,jdbcType=VARCHAR},
		down_count = #{downCount,jdbcType=INTEGER},
		version =
		#{version,jdbcType=INTEGER}
		where pack_id =
		#{packId,jdbcType=INTEGER}
	</update>
</mapper>