<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.esd.db.dao.salaryMapper" >
  <resultMap id="BaseResultMap" type="com.esd.db.model.salary" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="worker_id" property="workerId" jdbcType="INTEGER" />
    <result column="mark_time_totle" property="markTimeTotle" jdbcType="DOUBLE" />
    <result column="timer" property="timer" jdbcType="TIMESTAMP" />
    <result column="payOff_time" property="payOffTime" jdbcType="TIMESTAMP" />
    <result column="create_id" property="createId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_method" property="createMethod" jdbcType="VARCHAR" />
    <result column="update_id" property="updateId" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_method" property="updateMethod" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, worker_id, mark_time_totle, timer,payOff_time, create_id, create_time, create_method, 
    update_id, update_time, update_method
  </sql>
  <!-- 总金额 -->
	<select id="selectMoneyTotle" resultType="java.lang.Double" parameterType="java.util.Map">
		select sum(mark_time_totle) month from salary
		<where>
			mark_time_totle > 0
			<if test="today == 1">
				and DATE_FORMAT(timer,'%Y-%m-%d') >= DATE_FORMAT(now(),'%Y-%m-%d')
			</if>
		</where> 
			 
	</select>
  <!-- 榜单查询 -->
	<select id="selectMoneyList2" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT w.realName,SUM(s.mark_time_totle) sumMarkTime FROM salary s
			LEFT JOIN 
			(SELECT worker_id ,worker_real_name realName FROM worker) w 
			ON s.worker_id = w.worker_id
			WHERE
			 s.mark_time_totle > 0
			<if test="month != null">
            	<![CDATA[and (DATE_FORMAT(timer,'%Y-%m') = DATE_FORMAT('${month}','%Y-%m'))]]>
            </if>
            <if test="beginDate != null">
            	<![CDATA[and (DATE_FORMAT(timer,'%Y-%m-%d') >= DATE_FORMAT('${beginDate}','%Y-%m-%d') 
            	and DATE_FORMAT(timer,'%Y-%m-%d') <= DATE_FORMAT('${endDate}','%Y-%m-%d'))]]>
            </if>
			GROUP BY s.worker_id
			ORDER BY sumMarkTime DESC
			LIMIT 10 
	</select>
	<!-- 工作者当月有效时间ByWorkerId -->
	<select id="selectSumMarkTime2" resultType="java.lang.Double" parameterType="java.util.Map">
		select sum(mark_time_totle) month from salary
		where worker_id = ${workerId} and mark_time_totle > 0
			 and DATE_FORMAT(timer,'%Y-%m') >= DATE_FORMAT('${nowMonth}','%Y-%m')
	</select>
  <!-- 工资单 -->
  <select id="selectSalary" resultType="java.util.Map" parameterType="java.util.Map" >
    select workerId,markTime,realName,bankCard from 
    (SELECT s.worker_id workerId,sum(s.mark_time_totle) markTime,w.realName,w.bankCard FROM salary s 
	LEFT JOIN (SELECT worker_real_name realName,worker_bank_card bankCard,worker_id FROM worker) w 
	ON s.worker_id = w.worker_id
	<where>
		<if test="payOffType == 2">
			<![CDATA[s.mark_time_totle > 0]]>
		</if>
		<if test="payOffType == 1">
			<![CDATA[s.mark_time_totle < 0]]>
		</if>
		<if test="dateType == 1">
			and <![CDATA[(DATE_FORMAT(s.timer,'%Y-%m-%d') >= DATE_FORMAT('${beginDate}','%Y-%m-%d') and DATE_FORMAT(s.timer,'%Y-%m-%d') <= DATE_FORMAT('${endDate}','%Y-%m-%d'))]]>
		</if>
		<if test="dateType == 2">
			and <![CDATA[(DATE_FORMAT(s.timer,'%Y-%m') >= DATE_FORMAT('${beginDate}','%Y-%m') and DATE_FORMAT(s.timer,'%Y-%m') <= DATE_FORMAT('${endDate}','%Y-%m'))]]>
		</if>
		<if test="dateType == 3">
			and <![CDATA[(DATE_FORMAT(s.timer,'%Y') >= DATE_FORMAT('${beginDate}','%Y') and DATE_FORMAT(s.timer,'%Y') <= DATE_FORMAT('${endDate}','%Y'))]]>
		</if>
		<if test="realName != null">
			and w.realName like '%${realName}%'
		</if>
	</where>
	group by s.worker_id) m where 
	3 > 2
	<if test="salaryLine != null">
		<if test="payOffType == 2 or payOffType == 0">
			and <![CDATA[markTime >= ${salaryLine}]]>
		</if>
		<if test="payOffType == 1">
			and <![CDATA[markTime <= -${salaryLine}]]>
		</if>
	</if>
	<if test="payOffType == 2 or payOffType == 0">
		order by markTime desc
	</if>
	<if test="payOffType == 1">
		order by markTime 
	</if>	 
	limit ${begin},${end} 
  </select>
  <!-- 指定工作者工资单 -->
  <select id="selectWorkerSalaryByWorkerId" resultType="java.util.Map" parameterType="java.util.Map">
  	SELECT SUM(s.mark_time_totle) totle,DATE_FORMAT(s.timer,"%Y-%m") timer,s1.totle1  FROM salary s
		LEFT JOIN
		(SELECT SUM(mark_time_totle) totle1,DATE_FORMAT(timer,"%Y-%m") timer1 FROM salary  WHERE
			<![CDATA[worker_id = ${workerId} AND mark_time_totle < 0]]>		 
		  	GROUP BY DATE_FORMAT(timer,"%Y-%m")
		) s1
		ON DATE_FORMAT(s.timer,"%Y-%m") = timer1
		  	WHERE
		s.worker_id = ${workerId} AND s.mark_time_totle > 0 
  	GROUP BY DATE_FORMAT(s.timer,"%Y-%m")	
  	ORDER BY DATE_FORMAT(s.timer,"%Y-%m") DESC 
  </select>
  <select id="selectSUMSalary" resultType="java.lang.Double" parameterType="java.util.Map" >
     select sum(markTime) from
    (SELECT s.worker_id workerId,sum(s.mark_time_totle) markTime FROM salary s 
	LEFT JOIN (SELECT worker_real_name realName,worker_id FROM worker) w 
	ON s.worker_id = w.worker_id
	<where>
		<if test="payOffType == 2">
			<![CDATA[s.mark_time_totle > 0]]>
		</if>
		<if test="payOffType == 1">
			<![CDATA[s.mark_time_totle < 0]]>
		</if>
		<if test="dateType == 1">
			and <![CDATA[(DATE_FORMAT(s.timer,'%Y-%m-%d') >= DATE_FORMAT('${beginDate}','%Y-%m-%d') and DATE_FORMAT(s.timer,'%Y-%m-%d') <= DATE_FORMAT('${endDate}','%Y-%m-%d'))]]>
		</if>
		<if test="dateType == 2">
			and <![CDATA[(DATE_FORMAT(s.timer,'%Y-%m') >= DATE_FORMAT('${beginDate}','%Y-%m') and DATE_FORMAT(s.timer,'%Y-%m') <= DATE_FORMAT('${endDate}','%Y-%m'))]]>
		</if>
		<if test="dateType == 3">
			and <![CDATA[(DATE_FORMAT(s.timer,'%Y') >= DATE_FORMAT('${beginDate}','%Y') and DATE_FORMAT(s.timer,'%Y') <= DATE_FORMAT('${endDate}','%Y'))]]>
		</if>
		<if test="userNameCondition != null">
			and w.realName like '%${realName}%'
		</if>
	</where>
	group by s.worker_id 
	) m 
	where 
	3 > 2
	<if test="salaryLine != null">
		<if test="payOffType == 2 or payOffType == 0">
			and <![CDATA[markTime >= ${salaryLine}]]>
		</if>
		<if test="payOffType == 1">
			and <![CDATA[markTime <= -${salaryLine}]]>
		</if>
	</if> 
  </select>
  <select id="selectSalary100Count" resultType="java.lang.Integer" parameterType="java.util.Map" >
    select count(workerId) count from
    (SELECT s.worker_id workerId,sum(s.mark_time_totle) markTime FROM salary s 
	LEFT JOIN (SELECT worker_real_name realName,worker_id FROM worker) w 
	ON s.worker_id = w.worker_id
	<where>
		<if test="payOffType == 2">
			<![CDATA[s.mark_time_totle > 0]]>
		</if>
		<if test="payOffType == 1">
			<![CDATA[s.mark_time_totle < 0]]>
		</if>
		<if test="dateType == 1">
			and <![CDATA[(DATE_FORMAT(s.timer,'%Y-%m-%d') >= DATE_FORMAT('${beginDate}','%Y-%m-%d') and DATE_FORMAT(s.timer,'%Y-%m-%d') <= DATE_FORMAT('${endDate}','%Y-%m-%d'))]]>
		</if>
		<if test="dateType == 2">
			and <![CDATA[(DATE_FORMAT(s.timer,'%Y-%m') >= DATE_FORMAT('${beginDate}','%Y-%m') and DATE_FORMAT(s.timer,'%Y-%m') <= DATE_FORMAT('${endDate}','%Y-%m'))]]>
		</if>
		<if test="dateType == 3">
			and <![CDATA[(DATE_FORMAT(s.timer,'%Y') >= DATE_FORMAT('${beginDate}','%Y') and DATE_FORMAT(s.timer,'%Y') <= DATE_FORMAT('${endDate}','%Y'))]]>
		</if>
		<if test="userNameCondition != null">
			and w.realName like '%${realName}%'
		</if>
	</where>
	group by s.worker_id 
	) m where 
	3 > 2
	<if test="salaryLine != null">
		<if test="payOffType == 2 or payOffType == 0">
			and <![CDATA[markTime >= ${salaryLine}]]>
		</if>
		<if test="payOffType == 1">
			and <![CDATA[markTime <= -${salaryLine}]]>
		</if>
	</if> 
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from salary
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <!--合格的worker_record数据insert into salary-->
  <insert id="insertTimer" parameterType="java.util.Map">
    INSERT INTO salary (worker_id,mark_time_totle,timer)
	(SELECT ${workerId}, SUM(task_mark_time),NOW() FROM worker_record 
	WHERE worker_id = ${workerId} AND task_statu = 1 AND (task_effective = 0 or task_effective = 2))
  </insert>
   <!-- 结算salary -->
  <insert id="insertPayOffInfor" parameterType="java.util.Map">
    INSERT INTO salary (worker_id,mark_time_totle,timer,payOff_time)
	(SELECT worker_id,markTime,${timer},NOW() 
	FROM 
	(SELECT s.worker_id,-SUM(s.mark_time_totle) markTime,w.wrn 
	FROM salary s
	LEFT JOIN
	(SELECT worker_real_name wrn,worker_id FROM worker) w
	ON w.worker_id = s.worker_id   
	<where> 
		<if test="dateType == 1">
			and <![CDATA[(DATE_FORMAT(s.timer,'%Y-%m-%d') >= DATE_FORMAT('${beginDate}','%Y-%m-%d') and DATE_FORMAT(s.timer,'%Y-%m-%d') <= DATE_FORMAT('${endDate}','%Y-%m-%d'))]]>
		</if>
		<if test="dateType == 2">
			and <![CDATA[(DATE_FORMAT(s.timer,'%Y-%m') >= DATE_FORMAT('${beginDate}','%Y-%m') and DATE_FORMAT(s.timer,'%Y-%m') <= DATE_FORMAT('${endDate}','%Y-%m'))]]>
		</if>
		<if test="dateType == 3">
			and <![CDATA[(DATE_FORMAT(s.timer,'%Y') >= DATE_FORMAT('${beginDate}','%Y') and DATE_FORMAT(s.timer,'%Y') <= DATE_FORMAT('${endDate}','%Y'))]]>
		</if>
		<if test="realName != null">
			and w.wrn like '%${realName}%'
		</if>
	</where> 
	GROUP BY s.worker_id
	) m 
	WHERE <![CDATA[markTime < ${salaryLine}]]> )
  </insert>
  <!-- 结算salary -->
  <insert id="insertPayOffInfor1" parameterType="java.util.Map">
    INSERT INTO salary (worker_id,mark_time_totle,timer,payOff_time)
	(SELECT worker_id,markTime,'${timer}',NOW() 
	FROM 
	(SELECT s.worker_id,-SUM(s.mark_time_totle) markTime,w.wrn 
	FROM salary s
	LEFT JOIN
	(SELECT worker_real_name wrn,worker_id FROM worker) w
	ON w.worker_id = s.worker_id   
	<where>
		<foreach collection="workerId" item="item" open="(" close=")" separator="OR">  
	   		s.worker_id = #{item}  
	  	</foreach> 
		<if test="dateType == 1">
			and <![CDATA[(DATE_FORMAT(s.timer,'%Y-%m-%d') >= DATE_FORMAT('${beginDate}','%Y-%m-%d') and DATE_FORMAT(s.timer,'%Y-%m-%d') <= DATE_FORMAT('${endDate}','%Y-%m-%d'))]]>
		</if>
		<if test="dateType == 2">
			and <![CDATA[(DATE_FORMAT(s.timer,'%Y-%m') >= DATE_FORMAT('${beginDate}','%Y-%m') and DATE_FORMAT(s.timer,'%Y-%m') <= DATE_FORMAT('${endDate}','%Y-%m'))]]>
		</if>
		<if test="dateType == 3">
			and <![CDATA[(DATE_FORMAT(s.timer,'%Y') >= DATE_FORMAT('${beginDate}','%Y') and DATE_FORMAT(s.timer,'%Y') <= DATE_FORMAT('${endDate}','%Y'))]]>
		</if>
	</where> 
	GROUP BY s.worker_id
	) m )
  </insert>
  <insert id="insert" parameterType="com.esd.db.model.salary" >
    insert into salary (id, user_id, worker_id, 
      mark_time_totle, timer, create_id, 
      create_time, create_method, update_id, 
      update_time, update_method)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{workerId,jdbcType=INTEGER}, 
      #{markTimeTotle,jdbcType=DOUBLE}, #{timer,jdbcType=TIMESTAMP}, #{createId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createMethod,jdbcType=VARCHAR}, #{updateId,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateMethod,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.esd.db.model.salary" >
    insert into salary
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="workerId != null" >
        worker_id,
      </if>
      <if test="markTimeTotle != null" >
        mark_time_totle,
      </if>
      <if test="timer != null" >
        timer,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createMethod != null" >
        create_method,
      </if>
      <if test="updateId != null" >
        update_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateMethod != null" >
        update_method,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="workerId != null" >
        #{workerId,jdbcType=INTEGER},
      </if>
      <if test="markTimeTotle != null" >
        #{markTimeTotle,jdbcType=DOUBLE},
      </if>
      <if test="timer != null" >
        #{timer,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createMethod != null" >
        #{createMethod,jdbcType=VARCHAR},
      </if>
      <if test="updateId != null" >
        #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateMethod != null" >
        #{updateMethod,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.esd.db.model.salary" >
    update salary
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="workerId != null" >
        worker_id = #{workerId,jdbcType=INTEGER},
      </if>
      <if test="markTimeTotle != null" >
        mark_time_totle = #{markTimeTotle,jdbcType=DOUBLE},
      </if>
      <if test="timer != null" >
        timer = #{timer,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createMethod != null" >
        create_method = #{createMethod,jdbcType=VARCHAR},
      </if>
      <if test="updateId != null" >
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateMethod != null" >
        update_method = #{updateMethod,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.esd.db.model.salary" >
    update salary
    set user_id = #{userId,jdbcType=INTEGER},
      worker_id = #{workerId,jdbcType=INTEGER},
      mark_time_totle = #{markTimeTotle,jdbcType=DOUBLE},
      timer = #{timer,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_method = #{createMethod,jdbcType=VARCHAR},
      update_id = #{updateId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_method = #{updateMethod,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>