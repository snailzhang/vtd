<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.esd.db.dao.inspectorMapper">
	<resultMap id="BaseResultMap" type="com.esd.db.model.inspector">
		<id column="inspector_id" property="inspectorId" jdbcType="INTEGER" />
		<result column="inspector_name" property="inspectorName" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="create_id" property="createId" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="create_method" property="createMethod" jdbcType="VARCHAR" />
		<result column="update_id" property="updateId" jdbcType="INTEGER" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="update_method" property="updateMethod" jdbcType="VARCHAR" />
		<result column="version" property="version" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		inspector_id, inspector_name, user_id, create_id,
		create_time, create_method, update_id, update_time, update_method, version
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from inspector
		where inspector_id = #{inspectorId,jdbcType=INTEGER}
	</select>
	<select id="selectinspectorByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from inspector
		where user_id = #{userId,jdbcType=INTEGER}
	</select>
	<select id="selectCountInspectorIdByUserId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
		select
		count(inspector_id) count
		from inspector
		where user_id = #{userId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from inspector
		where inspector_id = #{inspectorId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.esd.db.model.inspector">
		insert into inspector (inspector_id, inspector_name,user_id,
		create_id, create_time,
		create_method, update_id, update_time,
		update_method, version)
		values (#{inspectorId,jdbcType=INTEGER}, #{inspectorName,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER},
		#{createId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
		#{createMethod,jdbcType=VARCHAR}, #{updateId,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP},
		#{updateMethod,jdbcType=VARCHAR}, #{version,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.esd.db.model.inspector">
		insert into inspector
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="inspectorId != null">
				inspector_id,
			</if>
			<if test="inspectorName != null">
				inspector_name,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="createId != null">
				create_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="createMethod != null">
				create_method,
			</if>
			<if test="updateId != null">
				update_id,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="updateMethod != null">
				update_method,
			</if>
			<if test="version != null">
				version,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="inspectorId != null">
				#{inspectorId,jdbcType=INTEGER},
			</if>
			<if test="inspectorUsername != null">
				#{inspectorName,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="createId != null">
				#{createId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createMethod != null">
				#{createMethod,jdbcType=VARCHAR},
			</if>
			<if test="updateId != null">
				#{updateId,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateMethod != null">
				#{updateMethod,jdbcType=VARCHAR},
			</if>
			<if test="version != null">
				#{version,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.esd.db.model.inspector">
		update inspector
		<set>
			<if test="inspectorName != null">
				inspector_name = #{inspectorName,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="createId != null">
				create_id = #{createId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createMethod != null">
				create_method = #{createMethod,jdbcType=VARCHAR},
			</if>
			<if test="updateId != null">
				update_id = #{updateId,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateMethod != null">
				update_method = #{updateMethod,jdbcType=VARCHAR},
			</if>
			<if test="version != null">
				version = #{version,jdbcType=INTEGER},
			</if>
		</set>
		where inspector_id = #{inspectorId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.esd.db.model.inspector">
		update inspector
		set inspector_name = #{inspectorName,jdbcType=VARCHAR},
		user_id = #{userId,jdbcType=INTEGER},
		create_id = #{createId,jdbcType=INTEGER},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		create_method = #{createMethod,jdbcType=VARCHAR},
		update_id = #{updateId,jdbcType=INTEGER},
		update_time = #{updateTime,jdbcType=TIMESTAMP},
		update_method = #{updateMethod,jdbcType=VARCHAR},
		version = #{version,jdbcType=INTEGER}
		where inspector_id = #{inspectorId,jdbcType=INTEGER}
	</update>
</mapper>