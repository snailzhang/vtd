<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.esd.db.dao.workerRecordMapper">
	<resultMap id="BaseResultMap" type="com.esd.db.model.workerRecord">
		<id column="record_id" property="recordId" jdbcType="INTEGER" />
		<result column="worker_id" property="workerId" jdbcType="INTEGER" />
		<result column="pack_id" property="packId" jdbcType="INTEGER" />
		<result column="task_id" property="taskId" jdbcType="INTEGER" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="task_name" property="taskName" jdbcType="VARCHAR" />
		<result column="pack_name" property="packName" jdbcType="VARCHAR" />
		<result column="down_pack_name" property="downPackName" jdbcType="VARCHAR" />
		<result column="down_url" property="downUrl" jdbcType="VARCHAR" />
		<result column="task_down_time" property="taskDownTime" jdbcType="TIMESTAMP" />
		<result column="task_upload_time" property="taskUploadTime" jdbcType="TIMESTAMP" />
		<result column="task_statu" property="taskStatu" jdbcType="INTEGER" />
		<result column="task_lock_time" property="taskLockTime" jdbcType="INTEGER" />
		<result column="task_mark_time" property="taskMarkTime" jdbcType="DOUBLE" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="create_method" property="createMethod" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="update_method" property="updateMethod" jdbcType="VARCHAR" />
		<result column="task_effective" property="taskEffective" jdbcType="INTEGER" />
		<result column="inspector_id" property="inspectorId" jdbcType="INTEGER" />
		<result column="version" property="version" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		record_id, worker_id, pack_id, task_id, user_name,task_name, pack_name,down_pack_name,down_url,
		task_down_time, task_upload_time,
		task_statu, task_lock_time, task_mark_time, create_time,
		create_method, update_time,
		update_method, task_effective,inspector_id,version
	</sql>
	<select id="selectWorkerRecordLikeDownPackName" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from worker_record
		<where>
			worker_id = #{workerId}
			<if test="downPackName != null">
				and down_pack_name like "%${downPackName}%"
			</if>
		</where>
		group by down_pack_name ORDER BY record_id DESC
		limit #{begin},#{end}
	</select>
	<select id="selectDownPackNameCountByworkerIdGroupByDownPackName" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count(rowCount) count from (select
		count(down_pack_name)
		rowCount,down_pack_name
		from worker_record
		where worker_id = #{workerId} group by down_pack_name) a
		<if test="downPackName != null">
			where down_pack_name like "%${downPackName}%"
		</if>
	</select>
	<select id="selectTaskMarkTimeMonthByWorkerIdAndMonth" resultType="java.lang.Double" parameterType="java.util.Map">
		select sum(task_mark_time) month
		from worker_record
		where 3 > 2
		<if test="workerId !=null">
			and worker_id = ${workerId}
		</if>
		<if test="month != null">
			and DATE_FORMAT(task_upload_time,'%m')='${month}' and year(task_upload_time) = '${year}'
		</if>
		<if test="userNameCondition != null">
			and user_name like '%${userNameCondition}%'
		</if>
		<if test="taskEffective != null">
			and task_effective = ${taskEffective}
		</if>
	</select>
	<select id="selectAllByWorkerId" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from worker_record
		<where>
			worker_id = #{workerId}
			<if test="taskNameCondition != null">
				and task_name like "%${taskNameCondition}%"
			</if>
			<if test="month != null">
				and DATE_FORMAT(task_down_time,"%m") = "${month}" and year(task_down_time) = '${year}'
			</if>
			<if test="statu == 0 or statu == 1 or statu == 2">
				and task_statu = #{statu}
			</if>
			<if test="taskEffective == 0 or taskEffective == 2">
				and (task_effective = 0 or task_effective = 2)
			</if>
		</where>
		<if test="statu == 1">
			order by task_upload_time
		</if>
		<if test="end != null">
			limit #{begin},#{end}
		</if>
	</select>
	<select id="selectByWorkerIdAndEffective" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from worker_record
		where 3 > 2
		<if test="workerId != null">
			and worker_id = ${workerId}
		</if>
		<if test="taskEffective == 3">
			and (task_effective = 0 or task_effective = 2)
		</if>
		<if test="taskEffective == 0">
			and task_effective = ${taskEffective}
		</if>
		<if test="taskEffective == 2">
			and task_effective = ${taskEffective}
		</if>
		<if test="taskStatu == 0">
			and task_statu = ${taskStatu}
		</if>
	</select>
	<select id="selectSUMTaskMarkTimeByPackId" resultType="java.lang.Double" parameterType="java.lang.Integer">
		SELECT SUM(task_mark_time) FROM worker_record

		WHERE pack_id = #{packId,jdbcType=INTEGER} and task_effective = 1

	</select>
	<select id="selectAllCountByWorkerId" resultType="java.lang.Integer" parameterType="java.util.Map">
		select
		count(record_id) totle
		from worker_record
		<where>
			worker_id = #{workerId}
			<if test="taskNameCondition != null">
				and task_name like "%${taskNameCondition}%"
			</if>
			<if test="month != null">
				and DATE_FORMAT(task_down_time,'%m')='${month}' and year(task_down_time) = '${year}'
			</if>
			<if test="statu == 0">
				and (task_statu = 0 or (task_statu = 1 and task_effective = 0))
			</if>
			<if test="statu == 1">
				and task_effective = 1
			</if>
			<if test="statu == 2">
				and (task_statu = 2 or task_statu = 3)
			</if>
		</where>
	</select>
	<select id="selectCountByWorkerId" resultType="java.lang.Integer" parameterType="java.util.Map">
		select
		count(record_id) totle
		from worker_record
		<where>
			3 > 2
			<if test="workerId !=null">
				and worker_id = #{workerId}
			</if>
			<if test="statu == 1">
				and task_statu = 1
			</if>
			<if test="taskEffective == 4">
				and (task_effective = 0 or task_effective = 2)
			</if>
		</where>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from worker_record
		where record_id = #{recordId,jdbcType=INTEGER}
	</select>
	<select id="selectAllByDownPackName" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from worker_record
		where down_pack_name = #{downPackName,jdbcType=VARCHAR}
	</select>
	<select id="selectDownUrlByTaskName" resultType="java.lang.String" parameterType="java.lang.String">
		select
		down_url
		from worker_record
		where task_name = #{taskName,jdbcType=VARCHAR}
	</select>
	<select id="selectDownUrlByDownPackName" resultType="java.lang.String" parameterType="java.lang.String">
		select
		down_url
		from worker_record
		where down_pack_name = #{downPackName,jdbcType=VARCHAR} limit 1
	</select>
	<select id="selectDownPackNameByTaskName" resultType="java.lang.String" parameterType="java.lang.String">
		select
		down_pack_name
		from worker_record
		where task_name = #{taskName,jdbcType=VARCHAR} and task_statu = 0
	</select>

	<select id="selectDoingTask" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from worker_record
		where task_statu = 0
	</select>
	<select id="selectPkIDByTaskName" resultType="java.lang.Integer" parameterType="java.lang.String">
		select
		record_id
		from worker_record
		where task_name = #{taskName,jdbcType=VARCHAR}
	</select>
	<select id="selectPkIDByTaskId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
		select
		record_id
		from worker_record
		where task_id = #{TaskId,jdbcType=INTEGER} and task_statu = 0
	</select>
	<select id="selectPackIdByTaskId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
		select
		pack_id
		from worker_record
		where task_id = #{TaskId,jdbcType=INTEGER} order by record_id desc limit 1
	</select>
	<select id="selectWorkerRecordByWorkerId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from worker_record
		where worker_id = #{workerId,jdbcType=INTEGER} order by record_id desc limit 1
	</select>
	<select id="selectDoingTaskCountByWorkerId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
		select
		count(record_id) count
		from worker_record
		where worker_id = #{workerId,jdbcType=INTEGER} and
		task_statu=0
	</select>
	<select id="selectDownNameAndTimeByWorkerIdGroupByDownPackName" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		down_pack_name,task_down_time
		from worker_record
		where worker_id =
		#{workerId,jdbcType=INTEGER} group by down_pack_name
	</select>
	<select id="selectDownNameAndTimeByWorkerIdPagesGroupByDownPackName" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		down_pack_name,task_down_time
		from worker_record
		where worker_id =
		#{workerId}
		group by down_pack_name limit #{begin},#{end}
	</select>
	<select id="selectTaskCountByDownPackName" resultType="java.lang.Integer" parameterType="java.lang.String">
		select
		count(record_id) count
		from worker_record
		where down_pack_name = #{downPackName, jdbcType=VARCHAR}
	</select>
	<select id="selectPackStatuByDownPackName" resultType="java.lang.Integer" parameterType="java.lang.String">
		select
		count(record_id) count
		from worker_record
		where down_pack_name = #{downPackName, jdbcType=VARCHAR}
		and task_statu = 0
	</select>
	<select id="selectFinishTaskCountByPackId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
		select
		count(record_id) count1
		from worker_record
		where pack_id = #{packId, jdbcType=INTEGER} and
		task_effective = 1
	</select>
	<select id="selectWorkerIdGroupByWorkerId" resultType="java.util.Map" parameterType="java.util.Map">
		select a.worker_id,a.user_name,a.c
		from (select
		worker_id,user_name,count(worker_id) c,sum(task_mark_time) s
		from worker_record
		where 3 > 2
		<if test="taskStatu == 1">
			and task_statu = 1
		</if>
		<if test="taskEffective == 3">
			<![CDATA[and (task_effective = 0 or task_effective = 2)]]>
		</if>
		<if test="taskEffective == 1">
			<![CDATA[and task_effective = 1]]>
		</if>
		<if test="taskEffective == 0">
			<![CDATA[and task_effective = 0]]>
		</if>
		<if test="taskEffective == 2">
			<![CDATA[and task_effective = 2]]>
		</if>
		<if test="userName != null">
			and user_name like '%${userName}%'
		</if>
		group by worker_id) a where 3>2
		<if test="timeMark == 0">
		<![CDATA[and (a.s > 600 or a.s = 600)]]>
		</if>
		<if test="timeMark == 1">
		<![CDATA[and a.s < 600]]>
		</if>
		<if test="end != null">
			limit #{begin},#{end}
		</if>
	</select>
	<select id="selectWorkerIdCountGroupByWorkerId" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count(a.worker_id) count
		from (select
		worker_id,user_name,count(worker_id) c,sum(task_mark_time) s
		from worker_record
		where 3 > 2
		<if test="taskStatu == 1">
			and task_statu = 1
		</if>
		<if test="taskEffective == 3">
			<![CDATA[and (task_effective = 0 or task_effective = 2)]]>
		</if>
		<if test="taskEffective == 1">
			<![CDATA[and task_effective = 1]]>
		</if>
		<if test="taskEffective == 0">
			<![CDATA[and task_effective = 0]]>
		</if>
		<if test="taskEffective == 2">
			<![CDATA[and task_effective = 2]]>
		</if>
		<if test="userName != null">
			and user_name like '%${userName}%'
		</if>
		group by worker_id) a where 3>2
		<if test="timeMark == 0">
		<![CDATA[and (a.s > 600 or a.s = 600)]]>
		</if>
		<if test="timeMark == 1">
		<![CDATA[and a.s < 600]]>
		</if>
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from worker_record
		where record_id = #{recordId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.esd.db.model.workerRecord">
		insert into worker_record (record_id, worker_id, pack_id,
		task_id,user_name, task_name, pack_name,down_pack_name,down_url
		task_down_time, task_upload_time,
		task_statu,
		task_lock_time, task_mark_time, create_time,
		create_method, update_time, update_method,
		task_effective,inspector_id,version)
		values (#{recordId,jdbcType=INTEGER},
		#{workerId,jdbcType=INTEGER},
		#{packId,jdbcType=INTEGER},
		#{taskId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR},#{taskName,jdbcType=VARCHAR}, #{packName,jdbcType=VARCHAR},
		#{downPackName,jdbcType=VARCHAR},#{downUrl,jdbcType=VARCHAR},
		#{taskDownTime,jdbcType=TIMESTAMP},
		#{taskUploadTime,jdbcType=TIMESTAMP}, #{taskStatu,jdbcType=INTEGER},
		#{taskLockTime,jdbcType=INTEGER},
		#{taskMarkTime,jdbcType=DOUBLE}, #{createTime,jdbcType=TIMESTAMP},
		#{createMethod,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateMethod,jdbcType=VARCHAR},
		#{taskEffective,jdbcType=INTEGER},#{inspectorId,jdbcType=INTEGER},#{version,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.esd.db.model.workerRecord">
		insert into worker_record
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="recordId != null">
				record_id,
			</if>
			<if test="workerId != null">
				worker_id,
			</if>
			<if test="packId != null">
				pack_id,
			</if>
			<if test="taskId != null">
				task_id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="taskName != null">
				task_name,
			</if>
			<if test="packName != null">
				pack_name,
			</if>
			<if test="downPackName != null">
				down_pack_name,
			</if>
			<if test="downUrl != null">
				down_url,
			</if>
			<if test="taskDownTime != null">
				task_down_time,
			</if>
			<if test="taskUploadTime != null">
				task_upload_time,
			</if>
			<if test="taskStatu != null">
				task_statu,
			</if>
			<if test="taskLockTime != null">
				task_lock_time,
			</if>
			<if test="taskMarkTime != null">
				task_mark_time,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="createMethod != null">
				create_method,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="updateMethod != null">
				update_method,
			</if>
			<if test="taskEffective != null">
				task_effective,
			</if>
			<if test="inspectorId != null">
				inspector_id,
			</if>
			<if test="version != null">
				version,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="recordId != null">
				#{recordId,jdbcType=INTEGER},
			</if>
			<if test="workerId != null">
				#{workerId,jdbcType=INTEGER},
			</if>
			<if test="packId != null">
				#{packId,jdbcType=INTEGER},
			</if>
			<if test="taskId != null">
				#{taskId,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="taskName != null">
				#{taskName,jdbcType=VARCHAR},
			</if>
			<if test="packName != null">
				#{packName,jdbcType=VARCHAR},
			</if>
			<if test="downPackName != null">
				#{downPackName,jdbcType=VARCHAR},
			</if>
			<if test="downUrl != null">
				#{downUrl,jdbcType=VARCHAR},
			</if>
			<if test="taskDownTime != null">
				#{taskDownTime,jdbcType=TIMESTAMP},
			</if>
			<if test="taskUploadTime != null">
				#{taskUploadTime,jdbcType=TIMESTAMP},
			</if>
			<if test="taskStatu != null">
				#{taskStatu,jdbcType=INTEGER},
			</if>
			<if test="taskLockTime != null">
				#{taskLockTime,jdbcType=INTEGER},
			</if>
			<if test="taskMarkTime != null">
				#{taskMarkTime,jdbcType=DOUBLE},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createMethod != null">
				#{createMethod,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateMethod != null">
				#{updateMethod,jdbcType=VARCHAR},
			</if>
			<if test="taskEffective != null">
				#{taskEffective,jdbcType=INTEGER},
			</if>
			<if test="inspectorId != null">
				#{inspectorId,jdbcType=INTEGER},
			</if>
			<if test="version != null">
				#{version,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>

	<update id="updateBydownPackName" parameterType="com.esd.db.model.workerRecord">
		update worker_record
		<set>
			<if test="downUrl != null">
				down_url = #{downUrl,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="version != null">
				version = (#{version,jdbcType=INTEGER} + 1),
			</if>
		</set>
		where down_pack_name = #{downPackName,jdbcType=VARCHAR}
		<if test="version != null">
			and version = #{version,jdbcType=INTEGER},
		</if>
	</update>
	<update id="updateByWorkerId" parameterType="java.util.Map">
		update worker_record
		<set>
			<if test="taskEffective != null">
				task_effective = #{taskEffective},
			</if>
			<if test="taskEffective == 2">
				task_statu = 0,
				task_mark_time = 0.00,
				task_down_time = NOW(),
			</if>
			<if test="taskLockTime != null">
				task_lock_time = #{taskLockTime},
			</if>
			<if test="inspectorId != null">
				inspector_id = #{inspectorId},
			</if>
			<if test="version != null">
				version = (#{version,jdbcType=INTEGER} + 1),
			</if>
		</set>
		where task_statu = 1 and worker_id = #{workerId} and <![CDATA[(task_upload_time > '${firstDate}' or task_upload_time = '${firstDate}')]]>
		<if test="version != null">
			and version = #{version,jdbcType=INTEGER},
		</if>
	</update>
	<update id="updateByGiveUp" parameterType="java.util.Map">
		update worker_record
		<set>
			<if test="taskStatu == 3">
				task_statu = 3,
			</if>
			<if test="version != null">
				version = (${version} + 1),
			</if>
			<if test="updateMethod != null">
				update_method = "${updateMethod}"
			</if>
		</set>
		where task_statu = 0 and worker_id = ${workerId} and task_id = ${taskId}
		<if test="version != null">
			and version = ${version},
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.esd.db.model.workerRecord">
		update worker_record
		<set>
			<if test="workerId != null">
				worker_id = #{workerId,jdbcType=INTEGER},
			</if>
			<if test="packId != null">
				pack_id = #{packId,jdbcType=INTEGER},
			</if>
			<if test="taskId != null">
				task_id = #{taskId,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="taskName != null">
				task_name = #{taskName,jdbcType=VARCHAR},
			</if>
			<if test="packName != null">
				pack_name = #{packName,jdbcType=VARCHAR},
			</if>
			<if test="downPackName != null">
				down_pack_name = #{downPackName,jdbcType=VARCHAR},
			</if>
			<if test="downUrl != null">
				down_url = #{downUrl,jdbcType=VARCHAR},
			</if>
			<if test="taskDownTime != null">
				task_down_time = #{taskDownTime,jdbcType=TIMESTAMP},
			</if>
			<if test="taskUploadTime != null">
				task_upload_time = #{taskUploadTime,jdbcType=TIMESTAMP},
			</if>
			<if test="taskStatu != null">
				task_statu = #{taskStatu,jdbcType=INTEGER},
			</if>
			<if test="taskLockTime != null">
				task_lock_time = #{taskLockTime,jdbcType=INTEGER},
			</if>
			<if test="taskMarkTime != null">
				task_mark_time = #{taskMarkTime,jdbcType=DOUBLE},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createMethod != null">
				create_method = #{createMethod,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateMethod != null">
				update_method = #{updateMethod,jdbcType=VARCHAR},
			</if>
			<if test="taskEffective != null">
				task_effective = #{taskEffective,jdbcType=INTEGER},
			</if>
			<if test="inspectorId != null">
				inspector_id = #{inspectorId,jdbcType=INTEGER},
			</if>
			<if test="version != null">
				version = (#{version,jdbcType=INTEGER} + 1),
			</if>
		</set>
		where record_id = #{recordId,jdbcType=INTEGER}
		<if test="version != null">
			and version = #{version,jdbcType=INTEGER}
		</if>
	</update>
	<update id="updateByPrimaryKey" parameterType="com.esd.db.model.workerRecord">
		update worker_record
		set worker_id = #{workerId,jdbcType=INTEGER},
		pack_id = #{packId,jdbcType=INTEGER},
		task_id = #{taskId,jdbcType=INTEGER},
		user_name = #{userName,jdbcType=VARCHAR},
		task_name = #{taskName,jdbcType=VARCHAR},
		pack_name = #{packName,jdbcType=VARCHAR},
		down_pack_name = #{downPackName,jdbcType=VARCHAR},
		down_url =
		#{downUrl,jdbcType=VARCHAR},
		task_down_time =
		#{taskDownTime,jdbcType=TIMESTAMP},
		task_upload_time = #{taskUploadTime,jdbcType=TIMESTAMP},
		task_statu = #{taskStatu,jdbcType=INTEGER},
		task_lock_time =
		#{taskLockTime,jdbcType=INTEGER},
		task_mark_time = #{taskMarkTime,jdbcType=DOUBLE},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		create_method = #{createMethod,jdbcType=VARCHAR},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP},
		update_method = #{updateMethod,jdbcType=VARCHAR},
		task_effective = #{taskEffective,jdbcType=INTEGER},
		inspector_id = #{inspectorId,jdbcType=INTEGER},
		where record_id =
		#{recordId,jdbcType=INTEGER}
	</update>
</mapper>